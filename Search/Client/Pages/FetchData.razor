@page "/fetchdata"

@inject HttpClient Http
@inject AppDataService service

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<div>
    <EditForm Model="@search" OnValidSubmit="@HandleValidSubmit">
        <div>
            <InputText id="Query" class="form-control"
                       placeholder="Søg..."
            @bind-Value="search!.Query" />
        </div>

        <button type="submit" class="btn btn-qna btn-submit">
            Send
        </button>
    </EditForm>
</div>

@if (search!.Result == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var word in search.Result.Query) {
        <p>@word</p>
    }
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
         @foreach (var doc in search.Result!.DocumentHits)
            {
                <tr>
                    <td>@doc.Document</td>
                    <td>@doc.NoOfHits</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public Search? search = new() { };

    private async Task HandleValidSubmit()
    {
        await RunSearch(search!.Query!);
    }

    protected async Task RunSearch(string query)
    {
        search!.Result = await service.GetQuery(query);
        if (search.Result is not null)
        {
            var res = search.Result;
            Console.WriteLine(res.Query);
            Console.WriteLine(res.Ignored);
        }
    }

    public class Search
    {
        public string? Query { get; set; }
        public SearchResult? Result { get; set; }
    }
}
